
Audio
=====

If you don't get sound when recording avi movies, double-check the
mixer settings first.  The record source defaults to micro on many
linux sound drivers, you probably have to change this to line-in with
one of the available mixer tools.  Also keep in mind that ALSA has
all mixer controls at 0 (i.e. muted) by default.

/me uses kmix (because it is small).  The inputs where the sound cards
record from have a red background color.  With the right mouse botton
you'll get a menu where you can change the settings.

Note on stereo:  xanim seems not be able to playback stereo sound
correctly.


Video
=====

xawtv/streamer handle video recording with multiple threads:

 - one thread records video (and does color space conversion
   / compression, maybe this should be separated)
 - one thread records audio (unless you do video only).
 - one thread writes the movie data to the disk.
 - one thread calls sync frequently to make the writeouts more
   smoothly (more smaller chunks instead of few very big ones).


There are buffer fifo's between the recording threads and the disk
writer to avoid recording overruns due to a temporarely busy hard
disk.

If you see messages about a full fifo or about v4l(2) waiting for
free buffers it is very likely that your hard disk is too slow,
especially if you try to record uncompressed video.

bttv 0.7.x allows you to use more than just two video buffers, you can
configure the number at insmod time (gbuffers option).  Using more
buffers (say 4-8 instead of just two which is the default) should help
to reduce the number of dropped frames.

If you want to record quicktime movies install the quicktime4linux
libraries (http://heroines.sourceforge.net/quicktime.php3), then
(re-)build xawtv.  The configure script should find the library
automatically.


Known problems (and workarounds)
================================

streamer/xawtv can't handle floating point frame rates (like 29.97).
Bad luck for now [to be fixed].

streamer/xawtv can't deal very good with lost frames, it can't do
(yet) tricks like stuffing the next frame twice it has lost one.
That's a problem if you want to record at full framerate.  A
workaround is to use a slightly lower rate, say 24 instead of 25 fps
(for PAL).  If you lose a single frame now and then, streamer can deal
with that much better because there is one "unused" frame per second.
streamer can use that spare frame make video catch up if it lags
behind a bit and avoid that audio/video run out of sync in the long
run.

The timestamping for the video frames isn't very exact as it does
_not_ come from the v4l(1) driver but is just a gettimeofday() call
after receiving the video frame.  API design bug, needs fixing.


Troubleshooting syncronisation problems
=======================================

If you are recording a movie with xawtv/stremaer you get a display
like this on stderr:

real: 3.638s   audio: 3.529s   video: 3.700s

 - "real" is the real time, i.e. simply the number of seconds passed
   since you've started recording.

 - "audio" says how much audio data was recorded: simply the total
   number of bytes divided by the data rate (bytes/second).

 - "video" is the same for video: total frames divided by the
   frames/second.

Obviously these numbers should stay close together.  If audio and
video run out of sync, you should be able to see whenever audio or
video is wrong by comparing the two with the real time.

The display says how much media data streamer/xawtv tried to put into
the fifos.  Any data which get lost due to fifo overruns will *not* be
taken into accout here, i.e. if you see "fifo full" error messages
your movie will have bad syncronisation even if the display looks
fine.  Possible fixes:  Try using more buffers.  Try recording
compressed video.  Try tuning the hard disk using hdparm.  Buy a
faster hard disk.  Buy a faster computer.

  Gerd

-- 
Gerd Knorr <kraxel@goldbach.in-berlin.de>
